{
	"info": {
		"_postman_id": "7d6cfc84-b75a-4b76-9082-3a4021d7c558",
		"name": "Urigin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "base",
					"item": [
						{
							"name": "31.Get your user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a8830ad-3888-4b9b-8f94-2867063a810e",
										"exec": [
											"pm.test(\"Save token\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json() === \"\"){",
											"        expect.fail(\"No token provided\");",
											"    }",
											"    pm.environment.set(\"token\", pm.response.json())",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@admin.fr\",\n    \"password\": \"yoloooo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "error in the server side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "user not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "connexion token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "32.Get your admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a8830ad-3888-4b9b-8f94-2867063a810e",
										"exec": [
											"pm.test(\"Save token\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json() === \"\"){",
											"        expect.fail(\"No token provided\");",
											"    }",
											"    pm.environment.set(\"tokenAdmin\", pm.response.json())",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"admin@admin.fr\",\n    \"password\": \"yoloooo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "user not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "error in the server side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "connexion token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "33.Get all user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8611f47-a6fd-4edd-a374-d237d80a49fe",
										"exec": [
											"pm.test(\"Test get all users\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json().result.length != 3){",
											"        expect.fail(\"Not enough users\");",
											"    }",
											"    pm.expect(pm.response.json().result[0].username).to.eql(\"kevinette\");",
											"    pm.expect(pm.response.json().result[1].username).to.eql(\"arthurette\");",
											"    pm.expect(pm.response.json().result[2].username).to.eql(\"rafaette\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenAdmin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "List users",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"username\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"password\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"username\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"password\": \"<string>\"\n }\n]"
								},
								{
									"name": "Your token is invalid or expired",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"code": 498,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden, you don't have enough rights",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "34.Create new user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"jesuis@nouveau.fr\",\n    \"password\": \"yoloooo\",\n    \"username\": \"petitNouveau\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "error in the server side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "your user was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "35.Get all user after insert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8611f47-a6fd-4edd-a374-d237d80a49fe",
										"exec": [
											"pm.test(\"Test get all users\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json().result.length != 4){",
											"        expect.fail(\"Not enough users\");",
											"    }",
											"    pm.expect(pm.response.json().result[0].username).to.eql(\"kevinette\");",
											"    pm.expect(pm.response.json().result[1].username).to.eql(\"arthurette\");",
											"    pm.expect(pm.response.json().result[2].username).to.eql(\"rafaette\");",
											"    pm.expect(pm.response.json().result[3].username).to.eql(\"petitNouveau\");",
											"    pm.environment.set(\"idToDelete\", pm.response.json().result[3].id);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenAdmin}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": [
								{
									"name": "Your token is invalid or expired",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"code": 498,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden, you don't have enough rights",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "List users",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"username\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"password\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"username\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"password\": \"<string>\"\n }\n]"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "{user Id}",
					"item": [
						{
							"name": "base",
							"item": [
								{
									"name": "36.Get your delete user token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a8830ad-3888-4b9b-8f94-2867063a810e",
												"exec": [
													"pm.test(\"Save token\", function() {",
													"    pm.response.to.have.status(200);",
													"    if(pm.response.json() === \"\"){",
													"        expect.fail(\"No token provided\");",
													"    }",
													"    pm.environment.set(\"tokenUserToDelete\", pm.response.json())",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"jesuis@nouveau.fr\",\n    \"password\": \"yoloooo\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": [
										{
											"name": "connexion token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "user not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"login"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "error in the server side",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"login"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "error with the body",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"login"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "37.Get a specific user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "105460de-09b3-4a9a-bde9-4462d1aa5598",
												"exec": [
													"pm.test(\"Test get user specific\", function() {",
													"    pm.response.to.have.status(200);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenAdmin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{idToDelete}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "user not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "a user",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<integer>\",\n \"email\": \"<string>\",\n \"username\": \"<string>\",\n \"role\": \"<integer>\",\n \"password\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "38.Get a specific user not exists",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "94b4c617-ad84-4b99-9f3a-8ebe8f5ae213",
												"exec": [
													"pm.test(\"Test user not exist\", function() {",
													"    pm.response.to.have.status(404);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "99"
												}
											]
										}
									},
									"response": [
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "user not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "a user",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<integer>\",\n \"email\": \"<string>\",\n \"username\": \"<string>\",\n \"role\": \"<integer>\",\n \"password\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "39.update your user parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab752474-77ef-4279-904a-a7778f6231df",
												"exec": [
													"pm.test(\"Test update user\", function() {",
													"    pm.response.to.have.status(200);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenUserToDelete}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"petitNouveauXXX\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{idToDelete}}",
													"description": "Numeric ID of the user to get"
												}
											]
										}
									},
									"response": [
										{
											"name": "user not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"role\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"role\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"role\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"role\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "operation successful",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"role\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "40.Get user updated",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "105460de-09b3-4a9a-bde9-4462d1aa5598",
												"exec": [
													"pm.test(\"Test get user specific\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().username).to.eql(\"petitNouveauXXX\");",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenAdmin}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "{{idToDelete}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "a user",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"<integer>\",\n \"email\": \"<string>\",\n \"username\": \"<string>\",\n \"role\": \"<integer>\",\n \"password\": \"<string>\"\n}"
										},
										{
											"name": "user not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "41.delete user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5f202991-0f8a-444c-a747-5c754a9a49c7",
												"exec": [
													"pm.test(\"Test get user specific\", function() {",
													"    pm.response.to.have.status(200);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenUserToDelete}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":userId"
											],
											"variable": [
												{
													"description": "Numeric ID of the user to get",
													"key": "userId",
													"value": "{{idToDelete}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "user not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "operation successful",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "games",
							"item": [
								{
									"name": "base",
									"item": [
										{
											"name": "42.Get all game from a user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e33712c0-70df-41ce-b8b2-1eed5766c472",
														"exec": [
															"pm.test(\"Test if games is returned\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 2){",
															"        expect.fail(\"Not enough games\");",
															"    }",
															"    pm.expect(pm.response.json()[0].name).to.eql(\"batman\");",
															"    pm.expect(pm.response.json()[1].name).to.eql(\"GTA\");",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenUser}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"games"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "list of games",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n }\n]"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "user not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "43.Get your creator token",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2a8830ad-3888-4b9b-8f94-2867063a810e",
														"exec": [
															"pm.test(\"Save token\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json() === \"\"){",
															"        expect.fail(\"No token provided\");",
															"    }",
															"    pm.environment.set(\"tokenCreator\", pm.response.json())",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"creator@admin.fr\",\n    \"password\": \"yoloooo\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														"login"
													]
												}
											},
											"response": [
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"login"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"login"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "connexion token",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"login"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "error in the server side",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/login",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"login"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "45.Add a new game",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d54c808-5ad7-4559-8377-228eb03e1fc9",
														"exec": [
															"pm.test(\"Test if games is returned\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenCreator}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Animal crossing\",\n    \"description\": \"-18\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"response": [
												{
													"name": "creation success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "46.Get all games search game to delete",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b3c71ea-71d0-49e2-84af-ea4f30e2bd1c",
														"exec": [
															"pm.test(\"Test if games is returned\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().result.length != 3){",
															"        expect.fail(\"Not enough games\");",
															"    }",
															"    pm.expect(pm.response.json().result[0].name).to.eql(\"batman\");",
															"    pm.expect(pm.response.json().result[1].name).to.eql(\"GTA\");",
															"    pm.expect(pm.response.json().result[2].name).to.eql(\"Animal crossing\");",
															"    pm.environment.set(\"idToDelete\", pm.response.json().result[2].id);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"response": [
												{
													"name": "game not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "list of games",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n }\n]"
												}
											]
										},
										{
											"name": "47.Add a new game in your library",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"gameId\": {{idToDelete}},\n    \"favorite\": true,\n    \"score\": 4\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"games"
													],
													"variable": [
														{
															"key": "userId",
															"value": "1",
															"description": "Numeric ID of the user to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "creation success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"gameId\": \"<integer>\",\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"gameId\": \"<integer>\",\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"gameId\": \"<integer>\",\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"gameId\": \"<integer>\",\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"gameId\": \"<integer>\",\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"gameId\": \"<integer>\",\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "48.Get all game from a user after link",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e33712c0-70df-41ce-b8b2-1eed5766c472",
														"exec": [
															"pm.test(\"Test if games is returned\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 3){",
															"        expect.fail(\"Not enough games\");",
															"    }",
															"    pm.expect(pm.response.json()[0].name).to.eql(\"batman\");",
															"    pm.expect(pm.response.json()[1].name).to.eql(\"GTA\");",
															"    pm.expect(pm.response.json()[2].name).to.eql(\"Animal crossing\");",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"games"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "user not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "list of games",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n }\n]"
												}
											]
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "{game Id}",
									"item": [
										{
											"name": "49.update your game favorite or scored",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bea9d0ee-3617-4350-9e38-accaad29a21f",
														"exec": [
															"pm.test(\"Test update link\", function() {",
															"    pm.response.to.have.status(200);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"favorite\": \"true\",\n    \"score\": \"5\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/games/:gameId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"games",
														":gameId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "1",
															"description": "Numeric ID of the user to get"
														},
														{
															"key": "gameId",
															"value": "{{idToDelete}}",
															"description": "Numeric ID of your game"
														}
													]
												}
											},
											"response": [
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "game or user not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "updated success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "49.1.update your game score too high",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bea9d0ee-3617-4350-9e38-accaad29a21f",
														"exec": [
															"pm.test(\"Test update link\", function() {",
															"    pm.response.to.have.status(400);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"favorite\": \"true\",\n    \"score\": \"15\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/games/:gameId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"games",
														":gameId"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														},
														{
															"description": "Numeric ID of your game",
															"key": "gameId",
															"value": "{{idToDelete}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "updated success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "game or user not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"favorite\": \"<boolean>\",\n    \"score\": \"<integer>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "50.Get all game from a user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e33712c0-70df-41ce-b8b2-1eed5766c472",
														"exec": [
															"pm.test(\"Test if games is returned\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 3){",
															"        expect.fail(\"Not enough games\");",
															"    }",
															"    pm.expect(pm.response.json()[0].name).to.eql(\"batman\");",
															"    pm.expect(pm.response.json()[1].name).to.eql(\"GTA\");",
															"    pm.expect(pm.response.json()[2].name).to.eql(\"Animal crossing\");",
															"    pm.expect(pm.response.json()[2].favorite).to.eql(true);",
															"    pm.expect(pm.response.json()[2].score).to.eql(5);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenUser}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"games"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "list of games",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n }\n]"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "user not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "51.delete your game from your library",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1189c80e-2555-4e99-9f3c-3b2ba0cf1e7f",
														"exec": [
															"pm.test(\"Test delete link\", function() {",
															"    pm.response.to.have.status(200);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/games/:gameId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"games",
														":gameId"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														},
														{
															"description": "Numeric ID of your game",
															"key": "gameId",
															"value": "{{idToDelete}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "relation or user not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "deleted success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games",
																"<integer>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "52.Get all game from a user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e33712c0-70df-41ce-b8b2-1eed5766c472",
														"exec": [
															"pm.test(\"Test if games is returned\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 2){",
															"        expect.fail(\"Not enough games\");",
															"    }",
															"    pm.expect(pm.response.json()[0].name).to.eql(\"batman\");",
															"    pm.expect(pm.response.json()[1].name).to.eql(\"GTA\");",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenUser}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"games"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "user not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "list of games",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n }\n]"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/games",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"games"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "53.delete a game",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "42b1355b-e9e2-4760-b657-5b8367ce910c",
														"exec": [
															"pm.test(\"Test if games is returned\", function() {",
															"    pm.response.to.have.status(200);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenCreator}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/:gameId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":gameId"
													],
													"variable": [
														{
															"key": "gameId",
															"value": "{{idToDelete}}",
															"description": "Numeric ID of the game to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "delete success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "game not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "relations",
							"item": [
								{
									"name": "base",
									"item": [
										{
											"name": "54.Get all relations from a user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5dcff934-27a2-4c6f-9712-9ff3896f0535",
														"exec": [
															"pm.test(\"Test relation\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 1){",
															"        expect.fail(\"Not enough games\");",
															"    }",
															"    pm.expect(pm.response.json()[0].id).to.eql(3);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"relations"
													],
													"variable": [
														{
															"key": "userId",
															"value": "1",
															"description": "Numeric ID of the user to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "user not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "list of relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"isBlocked\": \"<boolean>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"isBlocked\": \"<boolean>\"\n }\n]"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "55.Create a new relation with another user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1306f2cb-d2e9-41b2-bd6f-097b80b328d5",
														"exec": [
															"pm.test(\"Test relation\", function() {",
															"    pm.response.to.have.status(200);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"userId\": \"2\",\n    \"isBlocked\": \"false\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"relations"
													],
													"variable": [
														{
															"key": "userId",
															"value": "1",
															"description": "Numeric ID of the user to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "user not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"userId\": \"<integer>\",\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"userId\": \"<integer>\",\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"userId\": \"<integer>\",\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "creation success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"userId\": \"<integer>\",\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"userId\": \"<integer>\",\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"userId\": \"<integer>\",\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "56.Get all relations from a user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5dcff934-27a2-4c6f-9712-9ff3896f0535",
														"exec": [
															"pm.test(\"Test relation\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 2){",
															"        expect.fail(\"Not enough games\");",
															"    }",
															"    pm.expect(pm.response.json()[0].id).to.eql(2);",
															"    pm.expect(pm.response.json()[1].id).to.eql(3);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"relations"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "user not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "list of relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"isBlocked\": \"<boolean>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"isBlocked\": \"<boolean>\"\n }\n]"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "{relation Id}",
									"item": [
										{
											"name": "57.update your relation with another user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a3c440bb-44f4-43a5-aa1e-173b2ed8a39f",
														"exec": [
															"pm.test(\"Test relation\", function() {",
															"    pm.response.to.have.status(200);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"isBlocked\": \"true\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/relations/:relationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"relations",
														":relationId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "1",
															"description": "Numeric ID of the user to get"
														},
														{
															"key": "relationId",
															"value": "2",
															"description": "Numeric ID of your relation"
														}
													]
												}
											},
											"response": [
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "relation or user not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "updated success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"isBlocked\": \"<boolean>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "56.Get all relations from a user Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5dcff934-27a2-4c6f-9712-9ff3896f0535",
														"exec": [
															"pm.test(\"Test relation\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 2){",
															"        expect.fail(\"Not enough games\");",
															"    }",
															"    pm.expect(pm.response.json()[0].id).to.eql(2);",
															"    pm.expect(pm.response.json()[1].id).to.eql(3);",
															"    pm.expect(pm.response.json()[0].isBlocked).to.eql(true);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"relations"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "user not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "list of relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"isBlocked\": \"<boolean>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"isBlocked\": \"<boolean>\"\n }\n]"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "59.delete your relation with another user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91e5200a-6a0a-4c19-88fe-f33d16749a73",
														"exec": [
															"pm.test(\"Test relation\", function() {",
															"    pm.response.to.have.status(200);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/relations/:relationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"relations",
														":relationId"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														},
														{
															"description": "Numeric ID of your relation",
															"key": "relationId",
															"value": "2"
														}
													]
												}
											},
											"response": [
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "deleted success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "relation or user not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations",
																"<integer>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "56.Get all relations from a user Copy Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5dcff934-27a2-4c6f-9712-9ff3896f0535",
														"exec": [
															"pm.test(\"Test relation\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 1){",
															"        expect.fail(\"Not enough objects\");",
															"    }",
															"    pm.expect(pm.response.json()[0].id).to.eql(3);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/users/:userId/relations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"users",
														":userId",
														"relations"
													],
													"variable": [
														{
															"description": "Numeric ID of the user to get",
															"key": "userId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "user not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "list of relations",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/users/<integer>/relations",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"users",
																"<integer>",
																"relations"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"isBlocked\": \"<boolean>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"isBlocked\": \"<boolean>\"\n }\n]"
												}
											]
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "games",
			"item": [
				{
					"name": "base",
					"item": [
						{
							"name": "1.Get your creator token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a8830ad-3888-4b9b-8f94-2867063a810e",
										"exec": [
											"pm.test(\"Save token\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json() === \"\"){",
											"        expect.fail(\"No token provided\");",
											"    }",
											"    pm.environment.set(\"tokenCreator\", pm.response.json())",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"creator@admin.fr\",\n    \"password\": \"yoloooo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "connexion token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "error in the server side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "user not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "2.Get your user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a8830ad-3888-4b9b-8f94-2867063a810e",
										"exec": [
											"pm.test(\"Save token\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json() === \"\"){",
											"        expect.fail(\"No token provided\");",
											"    }",
											"    pm.environment.set(\"token\", pm.response.json())",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@admin.fr\",\n    \"password\": \"yoloooo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "user not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "connexion token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "error in the server side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "3.Get all games",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b3c71ea-71d0-49e2-84af-ea4f30e2bd1c",
										"exec": [
											"pm.test(\"Test if games is returned\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json().result.length != 2){",
											"        expect.fail(\"Not enough games\");",
											"    }",
											"    pm.expect(pm.response.json().result[0].name).to.eql(\"batman\");",
											"    pm.expect(pm.response.json().result[1].name).to.eql(\"GTA\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"response": [
								{
									"name": "game not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "list of games",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "4.Add a new game",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d54c808-5ad7-4559-8377-228eb03e1fc9",
										"exec": [
											"pm.test(\"Test if games is returned\", function() {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenCreator}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Animal crossing\",\n    \"description\": \"-18\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"response": [
								{
									"name": "Your token is invalid or expired",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"code": 498,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden, you don't have enough rights",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "creation success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "5.Get all games after insert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b3c71ea-71d0-49e2-84af-ea4f30e2bd1c",
										"exec": [
											"pm.test(\"Test if games is returned\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json().result.length != 3){",
											"        expect.fail(\"Not enough games\");",
											"    }",
											"    pm.expect(pm.response.json().result[0].name).to.eql(\"batman\");",
											"    pm.expect(pm.response.json().result[1].name).to.eql(\"GTA\");",
											"    pm.expect(pm.response.json().result[2].name).to.eql(\"Animal crossing\");",
											"    pm.environment.set(\"idToDelete\", pm.response.json().result[2].id);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/games",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"games"
									]
								}
							},
							"response": [
								{
									"name": "game not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "list of games",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n }\n]"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "{game Id}",
					"item": [
						{
							"name": "base",
							"item": [
								{
									"name": "6.update a game",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "52a0be52-4a84-4f4c-8162-6141ae73392d",
												"exec": [
													"pm.test(\"Test if you can update\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenCreator}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"je change le nom mais c'est pas possible\",\n    \"description\": \"Le best game mondial!!!!\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId",
													"value": "{{idToDelete}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "error with the body",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "update success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "7.Get games check previous update",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b3c71ea-71d0-49e2-84af-ea4f30e2bd1c",
												"exec": [
													"pm.test(\"Test if games is returned\", function() {",
													"    pm.response.to.have.status(200);",
													"    pm.expect(pm.response.json().name).to.eql(\"Animal crossing\");",
													"    pm.expect(pm.response.json().description).to.eql(\"Le best game mondial!!!!\");",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId",
													"value": "{{idToDelete}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "game not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "list of games",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"createdAt\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "8.delete a game",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42b1355b-e9e2-4760-b657-5b8367ce910c",
												"exec": [
													"pm.test(\"Test if games is returned\", function() {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenCreator}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId",
													"value": "{{idToDelete}}",
													"description": "Numeric ID of the game to get"
												}
											]
										}
									},
									"response": [
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "delete success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "game not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "9.delete a game I'm not a creator",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42b1355b-e9e2-4760-b657-5b8367ce910c",
												"exec": [
													"pm.test(\"Test delete a game if user not possible\", function() {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"key": "gameId",
													"value": "1",
													"description": "Numeric ID of the game to get"
												}
											]
										}
									},
									"response": [
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "delete success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "game not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "10.delete a game not authentificate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42b1355b-e9e2-4760-b657-5b8367ce910c",
												"exec": [
													"pm.test(\"Test delete a game not authentificate\", function() {",
													"    pm.response.to.have.status(401);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId"
											],
											"variable": [
												{
													"description": "Numeric ID of the game to get",
													"key": "gameId",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "delete success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "game not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "11.Get all users from a game",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e9916758-074c-4129-9865-d3723ab9fbd7",
												"exec": [
													"pm.test(\"Test get all gamers\", function() {",
													"    pm.response.to.have.status(200);",
													"    if(pm.response.json().length != 1){",
													"        expect.fail(\"Not enough gamers\");",
													"    }",
													"    pm.expect(pm.response.json()[0].username).to.eql(\"kevinette\");",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId",
												"users"
											],
											"variable": [
												{
													"key": "gameId",
													"value": "1",
													"description": "Numeric ID of the game to get"
												}
											]
										}
									},
									"response": [
										{
											"name": "list of users",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"username\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"password\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"username\": \"<string>\",\n  \"role\": \"<integer>\",\n  \"password\": \"<string>\"\n }\n]"
										},
										{
											"name": "game not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/users",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"users"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "types",
							"item": [
								{
									"name": "12.Get all types from a game",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf4d23cf-058f-44d1-b824-80a5070ebf51",
												"exec": [
													"pm.test(\"Test get all gamers\", function() {",
													"    pm.response.to.have.status(200);",
													"    if(pm.response.json().length != 2){",
													"        expect.fail(\"Not enough types\");",
													"    }",
													"    pm.expect(pm.response.json()[0].name).to.eql(\"Action\");",
													"    pm.expect(pm.response.json()[1].name).to.eql(\"Aventure\");",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId",
												"types"
											],
											"variable": [
												{
													"description": "Numeric ID of the game to get",
													"key": "gameId",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"name": "game not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "list of types",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "13.add new types",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8825534f-282b-4077-9c68-66935714f635",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "32a88360-4cdc-420e-b555-d2a162b8488c",
												"exec": [
													"pm.test(\"Test create new types\", function() {",
													"    pm.response.to.have.status(200);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenCreator}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Adulte\",\n    \"description\": \"C'est pas pour vous les n'enfants\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types"
											]
										}
									},
									"response": [
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "creation success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "error with the body",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "14.Add a new type to a game",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "371bb20e-b340-458b-afe5-57dc27aaa9bf",
												"exec": [
													"pm.test(\"Test add type to game\", function() {",
													"    pm.response.to.have.status(200);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenCreator}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"typeId\": \"3\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId",
												"types"
											],
											"variable": [
												{
													"description": "Numeric ID of the game to get",
													"key": "gameId",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"name": "error with the body",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"typeId\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"typeId\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "link success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"typeId\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"typeId\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"typeId\": \"<integer>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "15.Get all types from a game with previous add",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf4d23cf-058f-44d1-b824-80a5070ebf51",
												"exec": [
													"pm.test(\"Test get all gamers\", function() {",
													"    pm.response.to.have.status(200);",
													"    if(pm.response.json().length != 3){",
													"        expect.fail(\"Not enough types\");",
													"    }",
													"    pm.expect(pm.response.json()[0].name).to.eql(\"Action\");",
													"    pm.expect(pm.response.json()[1].name).to.eql(\"Aventure\");",
													"    pm.expect(pm.response.json()[2].name).to.eql(\"Adulte\");",
													"    pm.environment.set(\"idToDelete\", pm.response.json()[2].id);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId",
												"types"
											],
											"variable": [
												{
													"description": "Numeric ID of the game to get",
													"key": "gameId",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"name": "game not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "list of types",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "16.delete type to a game",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenCreator}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId/types/:typeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId",
												"types",
												":typeId"
											],
											"variable": [
												{
													"description": "Numeric ID of the game to get",
													"key": "gameId",
													"value": "1"
												},
												{
													"description": "Numeric ID of the type to get",
													"key": "typeId",
													"value": "{{idToDelete}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "game or types not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "delete link success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "17.Get all types from a game with previous delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf4d23cf-058f-44d1-b824-80a5070ebf51",
												"exec": [
													"pm.test(\"Test get all gamers\", function() {",
													"    pm.response.to.have.status(200);",
													"    if(pm.response.json().length != 2){",
													"        expect.fail(\"Not enough types\");",
													"    }",
													"    pm.expect(pm.response.json()[0].name).to.eql(\"Action\");",
													"    pm.expect(pm.response.json()[1].name).to.eql(\"Aventure\");",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/:gameId/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												":gameId",
												"types"
											],
											"variable": [
												{
													"description": "Numeric ID of the game to get",
													"key": "gameId",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"name": "game not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "list of types",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/<integer>/types",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														"<integer>",
														"types"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n }\n]"
										}
									]
								},
								{
									"name": "17.1.delete a type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenCreator}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/types/:typeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												":typeId"
											],
											"variable": [
												{
													"key": "typeId",
													"value": "{{idToDelete}}",
													"description": "Numeric ID of the type to get"
												}
											]
										}
									},
									"response": [
										{
											"name": "Forbidden, you don't have enough rights",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types",
														"<integer>"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types",
														"<integer>"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "type not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types",
														"<integer>"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "Your token is invalid or expired",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types",
														"<integer>"
													]
												}
											},
											"code": 498,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"description\": \"<string>\"\n}"
										},
										{
											"name": "delete success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/types/<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"types",
														"<integer>"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "Text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "comments",
							"item": [
								{
									"name": "base",
									"item": [
										{
											"name": "18.Get all comments from a game",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "00c163eb-9de8-4fd1-a4e1-a441442739b5",
														"exec": [
															"pm.test(\"Test get all comments\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 2){",
															"        expect.fail(\"Not enough comments\");",
															"    }",
															"    pm.expect(pm.response.json()[0].userId).to.eql(1);",
															"    pm.expect(pm.response.json()[1].userId).to.eql(1);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/:gameId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":gameId",
														"comments"
													],
													"variable": [
														{
															"key": "gameId",
															"value": "1",
															"description": "Numeric ID of the game to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "list of comments",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n }\n]"
												},
												{
													"name": "game not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "19.add new comments on a game",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2278d222-d496-4ea1-a096-ea4f8e0b328f",
														"exec": [
															"pm.test(\"Test create comments\", function() {",
															"    pm.response.to.have.status(200);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenCreator}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"J'aime bien ce jeu mais un peu moyen\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games/:gameId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":gameId",
														"comments"
													],
													"variable": [
														{
															"description": "Numeric ID of the game to get",
															"key": "gameId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "game not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "creation success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "20.Get all comments from a game after insert",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "00c163eb-9de8-4fd1-a4e1-a441442739b5",
														"exec": [
															"pm.test(\"Test get all comments\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 3){",
															"        expect.fail(\"Not enough comments\");",
															"    }",
															"    pm.expect(pm.response.json()[0].userId).to.eql(1);",
															"    pm.expect(pm.response.json()[1].userId).to.eql(1);",
															"    pm.expect(pm.response.json()[2].userId).to.eql(3);",
															"    pm.environment.set(\"idToDelete\", pm.response.json()[2].id);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/:gameId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":gameId",
														"comments"
													],
													"variable": [
														{
															"description": "Numeric ID of the game to get",
															"key": "gameId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "list of comments",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n }\n]"
												},
												{
													"name": "game not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "{comment Id}",
									"item": [
										{
											"name": "21.update a comment from a game",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenCreator}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"content\": \"je modifie mon com\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/games/:gameId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":gameId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"key": "gameId",
															"value": "1",
															"description": "Numeric ID of the game to get"
														},
														{
															"key": "commentId",
															"value": "{{idToDelete}}",
															"description": "Numeric ID of the comment to get"
														}
													]
												}
											},
											"response": [
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "game or comment not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "update success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "error with the body",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"createdAt\": \"<string>\",\n    \"updatedAt\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "22.Get all comments from a game after update",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "00c163eb-9de8-4fd1-a4e1-a441442739b5",
														"exec": [
															"pm.test(\"Test get all comments\", function() {",
															"    pm.response.to.have.status(200);",
															"    if(pm.response.json().length != 3){",
															"        expect.fail(\"Not enough comments\");",
															"    }",
															"    pm.expect(pm.response.json()[0].userId).to.eql(1);",
															"    pm.expect(pm.response.json()[1].userId).to.eql(1);",
															"    pm.expect(pm.response.json()[2].userId).to.eql(3);",
															"    pm.expect(pm.response.json()[2].content).to.eql(\"je modifie mon com\");",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/:gameId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":gameId",
														"comments"
													],
													"variable": [
														{
															"description": "Numeric ID of the game to get",
															"key": "gameId",
															"value": "1"
														}
													]
												}
											},
											"response": [
												{
													"name": "list of comments",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n {\n  \"id\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"createdAt\": \"<string>\",\n  \"updatedAt\": \"<string>\"\n }\n]"
												},
												{
													"name": "game not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "23.delete a comment from a game",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "029f2850-677a-41f3-bf25-0c68304276c5",
														"exec": [
															"pm.test(\"Test delete comments\", function() {",
															"    pm.response.to.have.status(200);",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{tokenCreator}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/games/:gameId/comments/:commentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"games",
														":gameId",
														"comments",
														":commentId"
													],
													"variable": [
														{
															"description": "Numeric ID of the game to get",
															"key": "gameId",
															"value": "1"
														},
														{
															"description": "Numeric ID of the comment to get",
															"key": "commentId",
															"value": "{{idToDelete}}"
														}
													]
												}
											},
											"response": [
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "game or comment not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "Forbidden, you don't have enough rights",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												},
												{
													"name": "delete success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Your token is invalid or expired",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{baseUrl}}/games/<integer>/comments/<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"games",
																"<integer>",
																"comments",
																"<integer>"
															]
														}
													},
													"code": 498,
													"_postman_previewlanguage": "Text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"description\": \"<string>\"\n}"
												}
											]
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "types",
			"item": [
				{
					"name": "base",
					"item": [
						{
							"name": "24.Get your creator token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a8830ad-3888-4b9b-8f94-2867063a810e",
										"exec": [
											"pm.test(\"Save token\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json() === \"\"){",
											"        expect.fail(\"No token provided\");",
											"    }",
											"    pm.environment.set(\"tokenCreator\", pm.response.json())",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"creator@admin.fr\",\n    \"password\": \"yoloooo\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "error in the server side",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "user not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "connexion token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"password\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/users/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "25.Get all types",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf4d23cf-058f-44d1-b824-80a5070ebf51",
										"exec": [
											"pm.test(\"Test get all gamers\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json().result.length != 2){",
											"        pm.expect.fail(\"Not enough types\");",
											"    }",
											"    pm.expect(pm.response.json().result[0].name).to.eql(\"Action\");",
											"    pm.expect(pm.response.json().result[1].name).to.eql(\"Aventure\");",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"types"
									]
								}
							},
							"response": [
								{
									"name": "game not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/<integer>/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<integer>",
												"types"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "list of types",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/<integer>/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<integer>",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "26.add new types",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8825534f-282b-4077-9c68-66935714f635",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "36bb3b5e-b44a-4e81-8cac-c695d62ffa91",
										"exec": [
											"pm.test(\"Test create types\", function() {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenCreator}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Adulte\",\n    \"description\": \"C'est pour les grands\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"types"
									]
								}
							},
							"response": [
								{
									"name": "creation success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Your token is invalid or expired",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types"
											]
										}
									},
									"code": 498,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden, you don't have enough rights",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "27.Get all types after insert",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf4d23cf-058f-44d1-b824-80a5070ebf51",
										"exec": [
											"pm.test(\"Test get all types\", function() {",
											"    pm.response.to.have.status(200);",
											"    if(pm.response.json().result.length != 3){",
											"        pm.expect.fail(\"Not enough types\");",
											"    }",
											"    pm.expect(pm.response.json().result[0].name).to.eql(\"Action\");",
											"    pm.expect(pm.response.json().result[1].name).to.eql(\"Aventure\");",
											"    pm.expect(pm.response.json().result[2].name).to.eql(\"Adulte\");",
											"    pm.environment.set(\"idToDelete\", pm.response.json().result[2].id);",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3fcd7b47-2e18-432f-84c2-2ad970907eb1",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"types"
									]
								}
							},
							"response": [
								{
									"name": "list of types",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/<integer>/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<integer>",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n }\n]"
								},
								{
									"name": "game not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/<integer>/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<integer>",
												"types"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "28.update a type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e04f7ce5-34cc-46c8-9355-3bf34a57263a",
										"exec": [
											"pm.test(\"update type\", function() {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenCreator}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"new\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/types/:typeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"types",
										":typeId"
									],
									"variable": [
										{
											"key": "typeId",
											"value": "{{idToDelete}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Your token is invalid or expired",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"code": 498,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden, you don't have enough rights",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "type not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "update success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "error with the body",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "29.Get a type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf4d23cf-058f-44d1-b824-80a5070ebf51",
										"exec": [
											"pm.test(\"Test get all gamers\", function() {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(pm.response.json().name).to.eql(\"Adulte\");",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3fcd7b47-2e18-432f-84c2-2ad970907eb1",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/types/:typeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"types",
										":typeId"
									],
									"variable": [
										{
											"key": "typeId",
											"value": "{{idToDelete}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "game not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/<integer>/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<integer>",
												"types"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "list of types",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/games/<integer>/types",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"games",
												"<integer>",
												"types"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n },\n {\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\"\n }\n]"
								}
							]
						},
						{
							"name": "30.delete a type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenCreator}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/types/:typeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"types",
										":typeId"
									],
									"variable": [
										{
											"key": "typeId",
											"value": "{{idToDelete}}",
											"description": "Numeric ID of the type to get"
										}
									]
								}
							},
							"response": [
								{
									"name": "delete success",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "type not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Forbidden, you don't have enough rights",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								},
								{
									"name": "Your token is invalid or expired",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/types/<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"types",
												"<integer>"
											]
										}
									},
									"code": 498,
									"_postman_previewlanguage": "Text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"description\": \"<string>\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "http://localhost:3000/v1",
			"type": "string"
		}
	]
}