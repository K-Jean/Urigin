{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Urigin",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/v1"
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "summary": "Get your authentification token",
        "operationId": "login",
        "requestBody": {
          "description": "User identification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "connexion token"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "500": {
            "description": "error in the server side",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all user",
        "operationId": "getusers",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to skip before starting to collect the result set"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "The numbers of items to return"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "List users",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "previous": {
                      "type": "string",
                      "description": "url to previous data"
                    },
                    "next": {
                      "type": "string",
                      "description": "url to next data"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new user",
        "operationId": "createUsers",
        "tags": [
          "users"
        ],
        "requestBody": {
          "description": "new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "your user was created"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "409": {
            "description": "user already exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "500": {
            "description": "error in the server side",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get a specific user",
        "operationId": "get a user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "a user",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "update your user parameter",
        "operationId": "put your information",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "requestBody": {
          "description": "new informations",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "integer",
                    "description": "Only if you are admin"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete user",
        "operationId": "delete your information",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/games": {
      "get": {
        "summary": "Get all game from a user",
        "operationId": "get game from a user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "list of games",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Game"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new game in your library",
        "operationId": "add game in your library",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "add new game",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "gameId": {
                    "type": "integer"
                  },
                  "favorite": {
                    "type": "boolean"
                  },
                  "score": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "creation success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/games/{gameId}": {
      "put": {
        "summary": "update your game favorite or scored",
        "operationId": "update games relation",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          },
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of your game"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "updated relation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "favorite": {
                    "type": "boolean"
                  },
                  "score": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "game or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete your game from your library",
        "operationId": "delete game relation",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          },
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of your game"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleted success"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "relation or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/relations": {
      "get": {
        "summary": "Get all relations from a user",
        "operationId": "get relations from a user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "list of relations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Relation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new relation with another user",
        "operationId": "post relations from a user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "new relation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userId": {
                    "type": "integer"
                  },
                  "isBlocked": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "creation success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/relations/{relationId}": {
      "put": {
        "summary": "update your relation with another user",
        "operationId": "update relations",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          },
          {
            "in": "path",
            "name": "relationId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of your relation"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "updated relation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "isBlocked": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "relation or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete your relation with another user",
        "operationId": "delete relations",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the user to get"
          },
          {
            "in": "path",
            "name": "relationId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of your relation"
          }
        ],
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleted success"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "relation or user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/games": {
      "get": {
        "summary": "Get all games",
        "operationId": "get games",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to skip before starting to collect the result set"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "The numbers of items to return"
          }
        ],
        "tags": [
          "games"
        ],
        "responses": {
          "200": {
            "description": "list of games",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "previous": {
                      "type": "string",
                      "description": "url to previous data"
                    },
                    "next": {
                      "type": "string",
                      "description": "url to next data"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Game"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new game",
        "operationId": "add game",
        "tags": [
          "games"
        ],
        "security": [
          {
            "bearerAuth": [
              "creator"
            ]
          }
        ],
        "requestBody": {
          "description": "add new game",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "creation success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/games/{gameId}": {
      "put": {
        "summary": "update a game",
        "operationId": "update a game",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "update game",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete a game",
        "operationId": "delete a game",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "delete success"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/games/{gameId}/types": {
      "get": {
        "summary": "Get all types from a game",
        "operationId": "get games types",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          }
        ],
        "responses": {
          "200": {
            "description": "list of types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Type"
                  }
                }
              }
            }
          },
          "404": {
            "description": "game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new type to a game",
        "operationId": "add game type",
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          }
        ],
        "tags": [
          "games"
        ],
        "security": [
          {
            "bearerAuth": [
              "creator"
            ]
          }
        ],
        "requestBody": {
          "description": "add new game type",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "typeId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "link success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/games/{gameId}/types/{typeId}": {
      "delete": {
        "summary": "delete type to a game",
        "operationId": "delete game type",
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          },
          {
            "in": "path",
            "name": "typeId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the type to get"
          }
        ],
        "tags": [
          "games"
        ],
        "security": [
          {
            "bearerAuth": [
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "delete link success"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "game or types not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/games/{gameId}/users": {
      "get": {
        "summary": "Get all users from a game",
        "operationId": "get games users",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          }
        ],
        "responses": {
          "200": {
            "description": "list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/games/{gameId}/comments": {
      "get": {
        "summary": "Get all comments from a game",
        "operationId": "get games comments",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          }
        ],
        "responses": {
          "200": {
            "description": "list of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          },
          "404": {
            "description": "game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "add new comments on a game",
        "operationId": "add game comments",
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          }
        ],
        "tags": [
          "games"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "add new comments",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "creation success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "game not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/games/{gameId}/comments/{commentId}": {
      "put": {
        "summary": "update a comment from a game",
        "operationId": "update a comments",
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          },
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the comment to get"
          }
        ],
        "tags": [
          "games"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "update comment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "game or comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete a comment from a game",
        "operationId": "delete a comment",
        "parameters": [
          {
            "in": "path",
            "name": "gameId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the game to get"
          },
          {
            "in": "path",
            "name": "commentId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the comment to get"
          }
        ],
        "tags": [
          "games"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "delete success"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "game or comment not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/types": {
      "get": {
        "summary": "Get all types",
        "operationId": "get all types",
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to skip before starting to collect the result set"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "The numbers of items to return"
          }
        ],
        "tags": [
          "types"
        ],
        "responses": {
          "200": {
            "description": "list of types",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "previous": {
                      "type": "string",
                      "description": "url to previous data"
                    },
                    "next": {
                      "type": "string",
                      "description": "url to next data"
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Type"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "add new types",
        "operationId": "add types",
        "tags": [
          "types"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "add new types",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "creation success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    },
    "/types/{typeId}": {
      "put": {
        "summary": "update a type",
        "operationId": "update a type",
        "parameters": [
          {
            "in": "path",
            "name": "typeId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the type to get"
          }
        ],
        "tags": [
          "types"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "requestBody": {
          "description": "update type",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Type"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update success"
          },
          "400": {
            "description": "error with the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "delete a type",
        "operationId": "delete a type",
        "parameters": [
          {
            "in": "path",
            "name": "typeId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the type to get"
          }
        ],
        "tags": [
          "types"
        ],
        "security": [
          {
            "bearerAuth": [
              "user",
              "creator",
              "admin"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "delete success"
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have enough rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          },
          "404": {
            "description": "type not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UriginError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "schemas": {
      "UriginError": {
        "required": [
          "description"
        ],
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "writeOnly": true
          },
          "username": {
            "type": "string"
          },
          "role": {
            "type": "integer",
            "description": "Only if your are admin"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        }
      },
      "Relation": {
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "readOnly": true
          },
          "isBlocked": {
            "type": "boolean"
          }
        }
      },
      "Game": {
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Only if you are the creator"
          },
          "createdAt": {
            "type": "string",
            "description": "creation date of this game",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "description": "update date of this game",
            "readOnly": true
          }
        }
      },
      "Comment": {
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "userId": {
            "type": "integer",
            "readOnly": true
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "creation date of this comment",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "description": "updated date of this comment",
            "readOnly": true
          }
        }
      },
      "Type": {
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": "string"
          }
        }
      }
    }
  }
}
